{"version":3,"file":"static/js/111.5f45df57.chunk.js","mappings":"8SAQMA,EAASC,EAAAA,GAAW,CACtBC,MAAOD,EAAAA,KAAaC,QAAQC,WAC5BC,SAAUH,EAAAA,KAAaI,IAAI,GAAGF,aAC/BA,WAqEH,EAnEkB,WAAO,IAAD,IACdG,GAAWC,EAAAA,EAAAA,MAEjB,GAKEC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,SACNC,UAAUC,EAAAA,EAAAA,GAAYX,KANtBY,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACAC,EAAK,EAALA,MACaC,EAAM,EAAnBC,UAAaD,OAcb,OACI,UAACE,EAAA,EAAG,CACFC,UAAU,OACVC,SAAUN,GAXC,SAAH,GAA6B,IAAvBX,EAAK,EAALA,MAAOE,EAAQ,EAARA,SACvBE,GACIc,EAAAA,EAAAA,IAAM,CACFlB,MAAAA,EACAE,SAAAA,KAERU,GACJ,IAKMO,GAAIC,EAAAA,GACJC,EAAG,EACHC,GAAI,EACJC,GAAG,OAAM,WAEX,SAACC,EAAA,GAAS,gBACRC,KAAK,SAAYf,EAAS,UAAQ,IAClCgB,GAAG,QACHC,MAAM,QACNR,GAAIS,EAAAA,OAEJ,SAACC,EAAA,EAAU,CACTC,QAAQ,QACRd,UAAU,OACVG,GAAI,CAACY,MAAO,gBAAgB,SAEf,QAFe,EAE3BlB,EAAOb,aAAK,aAAZ,EAAcgC,WAEnB,SAACR,EAAA,GAAS,gBACRC,KAAK,YAAef,EAAS,aAAW,IACxCgB,GAAG,WACHC,MAAM,WACNR,GAAIS,EAAAA,OAEF,SAACC,EAAA,EAAU,CACTC,QAAQ,QACRd,UAAU,OACVG,GAAI,CAACY,MAAO,gBAAgB,SAEd,QAFc,EAE7BlB,EAAOX,gBAAQ,aAAf,EAAiB8B,WAEtB,SAACC,EAAA,EAAM,CACHR,KAAK,SACLK,QAAQ,YACRX,GAAIe,EAAAA,GAAO,SACd,aAKT,E,UC9DA,EAbc,WACV,OACI,SAACC,EAAA,EAAS,CACThB,GAAI,CACFiB,GAAI,EACJC,GAAI,SACH,UAEN,SAAC,EAAS,KAGhB,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/operations\";\nimport { useForm } from 'react-hook-form';\nimport { TextField, Box, Button, Typography } from '@mui/material';\nimport { formStyle, inputStyle, button } from 'utils/styles';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object({\n    email: yup.string().email().required(),\n    password: yup.string().min(7).required(),\n}).required();\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    \n    const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    mode: 'onBlur',\n    resolver: yupResolver(schema),\n  });\n    \n    const onSubmit = ({ email, password }) => {\n        dispatch(\n            logIn({\n                email,\n                password\n            }))\n        reset();\n    }\n    return (\n        <Box\n          component=\"form\"\n          onSubmit={handleSubmit(onSubmit)}\n          sx={formStyle}\n          p={4}\n          mb={5}\n          mx=\"auto\"\n        >\n        <TextField\n          type=\"email\" {...register('email')}\n          id=\"email\"\n          label=\"email\"\n          sx={inputStyle}\n        />\n          <Typography \n            variant='body1' \n            component=\"span\"\n            sx={{color: \"text.primary\"}}\n          >\n            {errors.email?.message}\n          </Typography>\n        <TextField\n          type=\"password\" {...register('password')}\n          id=\"password\"\n          label=\"password\"\n          sx={inputStyle}\n        />\n            <Typography \n              variant='body1' \n              component=\"span\"\n              sx={{color: \"text.primary\"}}\n            >\n            {errors.password?.message}\n            </Typography>\n        <Button\n            type=\"submit\"\n            variant=\"contained\"\n            sx={button}\n        >\n           Log In\n        </Button>\n        </Box>\n    )\n}\n\nexport default LoginForm;","import LoginForm from \"components/LoginForm/LoginForm\";\nimport { Container } from \"@mui/material\";\n\nconst Login = () => {\n    return (\n        <Container\n         sx={{\n           pt: 5,\n           mt: \"200px\",\n          }}\n        >\n      <LoginForm />\n    </Container>\n    )\n}\n\nexport default Login;"],"names":["schema","yup","email","required","password","min","dispatch","useDispatch","useForm","mode","resolver","yupResolver","register","handleSubmit","reset","errors","formState","Box","component","onSubmit","logIn","sx","formStyle","p","mb","mx","TextField","type","id","label","inputStyle","Typography","variant","color","message","Button","button","Container","pt","mt"],"sourceRoot":""}